name: Images Plugin

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Build version'
        required: true
        type: string
        default: '2.0.0'
      is-release:
        description: 'Release'
        type: boolean
        default: false
  pull_request:
    branches:
      - 'main'
    paths:
      - 'Tum4ik.JustClipboardManager.ImagesPlugin/**'


jobs:

  build:

    name: Build ${{ inputs.version }}
    runs-on: windows-latest
    env:
      Scripts: .\.github\workflows\scripts
      TemporaryPfxFilePath: .\GitHubActionsWorkflow.pfx
      PublishOutputPath: .\Tum4ik.JustClipboardManager.ImagesPlugin\bin\Release\net7.0-windows\publish
      DistributionZipFilePath: .\ImagesPlugin.zip

    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v3.2.0
      with:
        dotnet-version: 7.0.x

    - name: Publish
      run: |
        dotnet publish ./Tum4ik.JustClipboardManager.ImagesPlugin/Tum4ik.JustClipboardManager.ImagesPlugin.csproj `
          -c Release `
          -o ${{ env.PublishOutputPath }} `
          --nologo `
          /p:Version=${{ inputs.version }}

    - name: Sign code files
      run: |
        ${{ env.Scripts }}\DecodePfx.ps1 `
          -Base64Pfx "${{ secrets.BASE64_ENCODED_PFX }}" `
          -OutputPath ${{ env.TemporaryPfxFilePath }}
        ${{ env.Scripts }}\SignMyCodeFiles.ps1 `
          -FilesDirectoryPath ${{ env.PublishOutputPath }} `
          -PfxFilePath ${{ env.TemporaryPfxFilePath }} `
          -PfxPassword ${{ secrets.PFX_KEY }} `
          -FileNamesToInclude Tum4ik.JustClipboardManager.ImagesPlugin.dll
        Remove-Item -Path ${{ env.TemporaryPfxFilePath }}

    - name: Zip
      run: Compress-Archive -Path ${{ env.PublishOutputPath }}\* -DestinationPath ${{ env.DistributionZipFilePath }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        if-no-files-found: error
        name: Output
        path: ${{ env.DistributionZipFilePath }}
